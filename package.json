{
  "name": "code_refactor",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@mui/material": "^5.14.12",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "d3": "^7.9.0",
    "html2canvas": "^1.4.1",
    "leaflet": "^1.9.4",
    "plotly.js": "^2.33.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-leaflet": "^4.2.1",
    "react-router-dom": "^6.23.1",
    "react-scripts": "5.0.1",
    "socket.io-client": "^4.7.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "description": "Wir haben in der Lektion 5 die beiden Bibliotheken \"Material UI (MUI)\" und \"React Router\" kennen gelernt. Mit diesen können wir die Geoharvester-Applikation aus der letzten Übung erweitern und mit Komponenten aus der UI-Bibliothek standardisieren. Zuletzt verwenden wir Formulare und komplexen State um Daten der Tabelle hinzuzufügen.",
  "main": "index.js",
  "keywords": [],
  "author": "",
  "license": "ISC"
}
